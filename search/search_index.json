{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"This page is still under heavy development. Beware of changes :P Here are all my configurations used in my Smart House. At the center of all is Home Assistant that controls all hardware in my house. Screenshots of the UI The hardware The software I will try to update this documentation, maybe this will inspire/help somebody :P Technology diagram ( Click for bigger version ). Made with Draw.io ( XML source file).","title":"Home"},{"location":"References/","text":"https://www.youtube.com/watch?v=XV4xzgraNEk https://www.youtube.com/watch?v=HBXIOj5ndo4 https://www.awesome-ha.com/#custom-lovelace-ui-cards https://github.com/lucusc/htpc/blob/362ac85e0e8b5178f3b927a961323466e67817ae/pihole/docker-compose.yml https://github.com/mfallone/smarthome/blob/ad8b1422812a43bd73b254bcbc737218e2053590/docker-compose.yaml https://github.com/dmarcotte/github-markdown-preview https://github.com/sfromm/ansible-playbooks/blob/master/encrypt-disk.yml https://community.home-assistant.io/t/howto-xiaomi-vacuum-zoned-cleaning/51293 https://community.home-assistant.io/t/spotify-playlist-player/22491/68 https://community.home-assistant.io/t/echo-devices-alexa-as-media-player-testers-needed/58639 https://community.home-assistant.io/t/echo-devices-alexa-as-media-player-testers-needed/58639 https://community.home-assistant.io/t/custom-dark-sky-animated-weather-card/59816 https://github.com/bieniu/home-assistant-config https://www.reddit.com/r/homeassistant/comments/837chb/samsung_washerdryer/ https://www.ikea.com/pl/pl/catalog/products/S69282219/ https://www.youtube.com/watch?v=AB75AxprXqQ https://www.amazon.com/Sabrent-Mini-Mount-Under-BK-MACM/dp/B07KWKJBQ7 https://www.deviousweb.com/2018/03/29/raspberry-pi-ambilight-with-usb-camera/ http://nilhcem.com/iot/reverse-engineering-simple-bluetooth-devices https://www.instructables.com/id/Reverse-Engineering-Smart-Bluetooth-Low-Energy-Dev/ https://community.home-assistant.io/t/custom-dark-sky-animated-weather-card/59816 https://community.home-assistant.io/t/day-countdown-card/79900 https://waldobronchart.com/note/ambient-light-tv-with-a-raspberry-pi-and-camera-part2 https://sourceforge.net/projects/sweethome3d/ https://github.com/dgiese/dustcloud/wiki/VacuumRobots-manual-update-root-Howto https://www.plex.tv/claim/ http://john.bitsurge.net/public/biglist.p2p.gz https://blog.ipsumdomus.com/sonoff-switch-complete-hack-without-firmware-upgrade-1b2d6632c01?gi=ce3ba228dfad","title":"References"},{"location":"DIY/CatFeeder/","text":"Page in progress :P \u00b6 Gen 1 \u00b6","title":"Cat Feeder"},{"location":"DIY/CatFeeder/#page-in-progress-p","text":"","title":"Page in progress :P"},{"location":"DIY/CatFeeder/#gen-1","text":"","title":"Gen 1"},{"location":"DIY/LedStrips/","text":"Page in progress :P \u00b6 Desk led strip: 39 Pin: D3 https://www.home-assistant.io/components/light.mqtt/ https://github.com/macbury/mqtt_led_strip","title":"Led Strips"},{"location":"DIY/LedStrips/#page-in-progress-p","text":"Desk led strip: 39 Pin: D3 https://www.home-assistant.io/components/light.mqtt/ https://github.com/macbury/mqtt_led_strip","title":"Page in progress :P"},{"location":"DIY/RiggadLamp/","text":"I always wanted smart lamp with wirless charging so I decided to modify my Ikea RIGGAD Lamp . This setup was done by combining: WeMos D1 mini NeoPixel Ring Pololu D24V10F5 step down 5V 1A Small amount of C code Riggad Lamp Communication with lamp is done through MQTT and I can controll this lamp using MQTT Light Component : - platform : mqtt_json command_topic : 'home/living_room/led_strip/desk/set' state_topic : 'home/living_room/led_strip/desk' name : 'Work desk lamp' qos : 1 rgb : true retain : false brightness : true effect_list : !include led_strip_effects.yaml effect_value_template : '{{ json_value.effect }}'","title":"Riggad Lamp"},{"location":"Hardware/","text":"This is the list of all hardware that is present in my smart house. Computers \u00b6 Gigabyte BRIX GB-BPCE-3455 \u00b6 I needed something more powerfull than RaspberryPi to host all services running my Smart House. Gigabyte BRIX GB-BPCE-3455 can be extended by normal hard drive and RAM (in my case 8GB RAM and 250GB SSD). The Intel Celeron inside this small box have enought power to even transcode 4K video(plex in docker) and small amount of machine learning. Raspberry Pi 3 \u00b6 This small computer is used mainly for DIY stuff like cat feeder and Gateway . First version of my smart house run on one of these, but quickly my requirements outgrown its computing power. Z-Wave \u00b6 My adventure with Z-Wave started with Danfoss Thermostats , after one winter, I received astronomical bill for heating. Interaction with all Z-Wave devices is done using Aeotec Z-Stick Gen5 that is plugged to my Gigabyte BRIX. The cool thing about this setup is that each device is from different manufacturer and they work together. Currently my arsenal of Z-Wave devices consits: Device Quantity Component Notes Aeotec Z-Stick Gen5 1 Z-Wave Main Z-Wave Hub as usb dongle Danfoss Z-Wave Thermostats 3 Z-Wave Climate Used for controlling temperature in rooms NEO Coolcam - Door/Window Sensor 5 Z-Wave Binary Sensor Used for detecting what doors are open/closed NEO Coolcam - Motion Sensor 2 Z-Wave Binary Sensor For detecting cat movement and some light automations NEO Coolcam - Flood Water Leak Alarm Senso 1 Z-Wave Binary Sensor For detecting leakage in bathroom Fibaro Relay Switch 8 Z-Wave Switch Controling lights and switches Roller Shutter 3 1 Z-Wave Cover Controling living room blinds NEO Coolcam - Power Plug 2 Z-Wave switch Used for detecting if AGD stuff is working ZigBee \u00b6 Philips Hue \u00b6 I`m using Philips Hue Hub Gen 2 for controlling my TR\u00c5DFRI lights. The default gateway from Ikea was buggy as hell. After few hours it stopped responding and only fix was to restart it by plugging device from power. Device Quantity Component TR\u00c5DFRI Bulb 2 Hue Xiaomi \u00b6 Currently most of my sensors is Xiaomi, so I need to use their Gateway to integrate them with Home Assistant. It does intergrate with its ecosystem pretty ok, with support for playing a sound and it also has a rgb led which will change colours on events like upcoming rain, etc. Gateway has blocked access to network(this is still chines company duh.) Device Quantity Component Notes Mi Air Purifier 2 1 Xiaomi Air Purifier Air purifier in bedroom room Mi Air Purifier 2s 1 Xiaomi Air Purifier Air purifier in living room Xiaomi Aqara Hub 1 Xiaomi Gateway (Aqara) Used for communication with wirless switches and temperature sensors Xiaomi Aqara Wireless Remote Switch 6 Xiaomi Switch These switches are used for triggering various automations Xiaomi Mijia Roborock Vacuum Cleaner 2 1 Xiaomi Mi Robot Vacuum Automated to run at specific times based on presence detection. Xiaomi Mijia Roborock Vacuum Cleaner 2 1 Xiaomi Mi Robot Vacuum Automated to run at specific times based on presence detection. Xiaomi Aqara Temperature Humidity Sensor 3 Xiaomi Aqara For sampling temperature and humidity in rooms without air purifiers(they have humidity and temperature sensors inside them) Wi-Fi Network \u00b6 And here are all devices that are connected over Wi-Fi network: Device Quantity Connection Home Assistant Notes Amazon Echo DOT 3 WiFi Alexa / Amazon Echo The Alexa devices are used as interface to interact with HomeAssistant Playstation 4 1 WiFi PS4 For playing and watching stuff that requires DVD/Blurays HW-K650 Soundbar w/ Wireless Subwoofer 1 WiFi ha_samsung_multi_room Some sound goodies control stuff LG webOS TV 55SK8100PLA 1 WiFi LG webOS Smart TV Watching movies, showing Home Assistant panel and notifications Router Asus RT-AC56U 1 WiFi Asuswrt Network, remote access through VPN QNAP TS-228 1 Ethernet QNAP Sensor Main storage array for backups, TimeMachine and photos RIGGAD Lamp 1 Wi-Fi MQTT Light Lamp with wirless charging. Additionaly I have replaced default bulb with NeoPixel Ring and WeMos D1 mini . See this in action Linak Desk 1 Bluetooth MQTT Cover Nice desk with ability to adjust height","title":"Hardware"},{"location":"Hardware/#computers","text":"","title":"Computers"},{"location":"Hardware/#gigabyte-brix-gb-bpce-3455","text":"I needed something more powerfull than RaspberryPi to host all services running my Smart House. Gigabyte BRIX GB-BPCE-3455 can be extended by normal hard drive and RAM (in my case 8GB RAM and 250GB SSD). The Intel Celeron inside this small box have enought power to even transcode 4K video(plex in docker) and small amount of machine learning.","title":"Gigabyte BRIX GB-BPCE-3455"},{"location":"Hardware/#raspberry-pi-3","text":"This small computer is used mainly for DIY stuff like cat feeder and Gateway . First version of my smart house run on one of these, but quickly my requirements outgrown its computing power.","title":"Raspberry Pi 3"},{"location":"Hardware/#z-wave","text":"My adventure with Z-Wave started with Danfoss Thermostats , after one winter, I received astronomical bill for heating. Interaction with all Z-Wave devices is done using Aeotec Z-Stick Gen5 that is plugged to my Gigabyte BRIX. The cool thing about this setup is that each device is from different manufacturer and they work together. Currently my arsenal of Z-Wave devices consits: Device Quantity Component Notes Aeotec Z-Stick Gen5 1 Z-Wave Main Z-Wave Hub as usb dongle Danfoss Z-Wave Thermostats 3 Z-Wave Climate Used for controlling temperature in rooms NEO Coolcam - Door/Window Sensor 5 Z-Wave Binary Sensor Used for detecting what doors are open/closed NEO Coolcam - Motion Sensor 2 Z-Wave Binary Sensor For detecting cat movement and some light automations NEO Coolcam - Flood Water Leak Alarm Senso 1 Z-Wave Binary Sensor For detecting leakage in bathroom Fibaro Relay Switch 8 Z-Wave Switch Controling lights and switches Roller Shutter 3 1 Z-Wave Cover Controling living room blinds NEO Coolcam - Power Plug 2 Z-Wave switch Used for detecting if AGD stuff is working","title":"Z-Wave"},{"location":"Hardware/#zigbee","text":"","title":"ZigBee"},{"location":"Hardware/#philips-hue","text":"I`m using Philips Hue Hub Gen 2 for controlling my TR\u00c5DFRI lights. The default gateway from Ikea was buggy as hell. After few hours it stopped responding and only fix was to restart it by plugging device from power. Device Quantity Component TR\u00c5DFRI Bulb 2 Hue","title":"Philips Hue"},{"location":"Hardware/#xiaomi","text":"Currently most of my sensors is Xiaomi, so I need to use their Gateway to integrate them with Home Assistant. It does intergrate with its ecosystem pretty ok, with support for playing a sound and it also has a rgb led which will change colours on events like upcoming rain, etc. Gateway has blocked access to network(this is still chines company duh.) Device Quantity Component Notes Mi Air Purifier 2 1 Xiaomi Air Purifier Air purifier in bedroom room Mi Air Purifier 2s 1 Xiaomi Air Purifier Air purifier in living room Xiaomi Aqara Hub 1 Xiaomi Gateway (Aqara) Used for communication with wirless switches and temperature sensors Xiaomi Aqara Wireless Remote Switch 6 Xiaomi Switch These switches are used for triggering various automations Xiaomi Mijia Roborock Vacuum Cleaner 2 1 Xiaomi Mi Robot Vacuum Automated to run at specific times based on presence detection. Xiaomi Mijia Roborock Vacuum Cleaner 2 1 Xiaomi Mi Robot Vacuum Automated to run at specific times based on presence detection. Xiaomi Aqara Temperature Humidity Sensor 3 Xiaomi Aqara For sampling temperature and humidity in rooms without air purifiers(they have humidity and temperature sensors inside them)","title":"Xiaomi"},{"location":"Hardware/#wi-fi-network","text":"And here are all devices that are connected over Wi-Fi network: Device Quantity Connection Home Assistant Notes Amazon Echo DOT 3 WiFi Alexa / Amazon Echo The Alexa devices are used as interface to interact with HomeAssistant Playstation 4 1 WiFi PS4 For playing and watching stuff that requires DVD/Blurays HW-K650 Soundbar w/ Wireless Subwoofer 1 WiFi ha_samsung_multi_room Some sound goodies control stuff LG webOS TV 55SK8100PLA 1 WiFi LG webOS Smart TV Watching movies, showing Home Assistant panel and notifications Router Asus RT-AC56U 1 WiFi Asuswrt Network, remote access through VPN QNAP TS-228 1 Ethernet QNAP Sensor Main storage array for backups, TimeMachine and photos RIGGAD Lamp 1 Wi-Fi MQTT Light Lamp with wirless charging. Additionaly I have replaced default bulb with NeoPixel Ring and WeMos D1 mini . See this in action Linak Desk 1 Bluetooth MQTT Cover Nice desk with ability to adjust height","title":"Wi-Fi Network"},{"location":"HomeAssistant/AppDaemon/","text":"Automations \u00b6 There are some limitations with HomeAssistant YAML configuration files. I wanted to add more sophisticated logic, and my YAML file become unreadable cluster fuck, thankfully there is a nifty tool called AppDaemon that allowed me to implement these automations in python. Air Purifier \u00b6 Xiaomi Air Purifier has big fallacy. It detect water vapor from humidifier as pollution and quickly increases AQI. These causes feedback loop and Air purifier goes super sayian mode and sets fan spin to over 9000. To combat this problem automation changes purifier mode to favorite with speed level that equals 1. Also air purifier should stop working when balcone door or window is opened. And finnaly the schedule is controlled by calendar entity and of cource it is also based on presence in the home. living_room_air : module : air_purifier_ai class : AirPurifierAI alt_mode_entity : switch.living_room_humidifier alt_mode : 'Favorite' alt_mode_speed : 1 calendar : calendar.oczyszczacz_salon fan_id : 'fan.living_room_air_purifier' family_devices : 'group.family' fallback : 5400 mode : 'Auto' balcone_door : sensor.living_room_balcone_door Adaptive Room Heating \u00b6 My apartament is in block from 1960. Some of inside installation is pretty ancient. For example my heating radiator has a dial with range 1 to 5 but really heat going throug when is set to 5, and anything below that probabbly depends on combined pressure from all apartaments below(or it is caused by lepricons). TODO: Write more about this Humidifier \u00b6 TODO: Write more about this Spotify Light \u00b6 TODO: Write more about this","title":"AppDaemon"},{"location":"HomeAssistant/AppDaemon/#automations","text":"There are some limitations with HomeAssistant YAML configuration files. I wanted to add more sophisticated logic, and my YAML file become unreadable cluster fuck, thankfully there is a nifty tool called AppDaemon that allowed me to implement these automations in python.","title":"Automations"},{"location":"HomeAssistant/AppDaemon/#air-purifier","text":"Xiaomi Air Purifier has big fallacy. It detect water vapor from humidifier as pollution and quickly increases AQI. These causes feedback loop and Air purifier goes super sayian mode and sets fan spin to over 9000. To combat this problem automation changes purifier mode to favorite with speed level that equals 1. Also air purifier should stop working when balcone door or window is opened. And finnaly the schedule is controlled by calendar entity and of cource it is also based on presence in the home. living_room_air : module : air_purifier_ai class : AirPurifierAI alt_mode_entity : switch.living_room_humidifier alt_mode : 'Favorite' alt_mode_speed : 1 calendar : calendar.oczyszczacz_salon fan_id : 'fan.living_room_air_purifier' family_devices : 'group.family' fallback : 5400 mode : 'Auto' balcone_door : sensor.living_room_balcone_door","title":"Air Purifier"},{"location":"HomeAssistant/AppDaemon/#adaptive-room-heating","text":"My apartament is in block from 1960. Some of inside installation is pretty ancient. For example my heating radiator has a dial with range 1 to 5 but really heat going throug when is set to 5, and anything below that probabbly depends on combined pressure from all apartaments below(or it is caused by lepricons). TODO: Write more about this","title":"Adaptive Room Heating"},{"location":"HomeAssistant/AppDaemon/#humidifier","text":"TODO: Write more about this","title":"Humidifier"},{"location":"HomeAssistant/AppDaemon/#spotify-light","text":"TODO: Write more about this","title":"Spotify Light"},{"location":"HomeAssistant/Components/","text":"My Components \u00b6 Here are components developed by me. It will rain \u00b6 This simple sensor just checks forecast for next few hours, and switches on if there is chance of rain. I use this with simple automation, to notify about next rain by switching blue light: - alias : Switch on blue light alert if it is going to rain trigger : platform : state entity_id : sensor.it_will_rain to : 'on' condition : condition : and conditions : - condition : state entity_id : group.family state : 'home' - condition : time after : '7:00:00' before : '23:59:59' action : - service : light.turn_on data : entity_id : light.gatewa_ambient_light rgb_color : [ 0 , 190 , 255 ] brightness : 45 Samsung Multiroom \u00b6 This custom component is used for controlling volume, and source of my multiroom device like Samsung Soundbar K650 . It is based on unofficial api . This component is based on my older code from this repository media_player : - platform : samsung_multi_room name : \"Soundbar\" # name, otherwise it will use name of your soundbar host : 192.168.1.227 # ip of your soundbar max_volume : 20 # on this level glass breaks, and there are 80 levels more on K650... KKM \u00b6 This component fetch information about my train card from www.mpk.krakow.pl and creates sensor with information about how many days is left before expiration and on what tram lines it can be used for. - platform : kkm name : Tram card identity : 12345678 city_card : 12345678 PublicTransit \u00b6 Public transit uses data collected by busix software that scraps Cracow public transit webpage and extracts departures of buses and trains. You can specify in component starting line stop and target line stop and system will refresh and calculate next departure. There is also custom lovelace component for displaying data. - platform : public_transit name : work from : \"Bia\u0142ucha\" to : \"Wzg\u00f3rza Krzes\u0142awickie\" endpoint : \"http://busix:5000/api\" Lunching \u00b6 Used for fetching information from lunching.pl about what did I order to eat in work. Sensor contains information when food will be delivered and what was ordered. - platform : lunching name : foooooooood username : macbury password : secret password here Cracow Air Quality \u00b6 Simple integration with Air Quality stations in Cracow for getting \"fresh\" information. Data is fetched from Cracow Air Quality Monitoring Page - platform : cracow_air_quality station_id : 7 name : 'nowa_huta' Harvest \u00b6 Integration with harvest time tracking software. Mainly used for sending notification that work is done, and I should take my ass back to home. - platform : harvest name : work account_id : 1234 token : morphing-power-token Spotify Cover Sensor \u00b6 This platform extracts colors from currently played song cover. If proper scene is activated, these colors are used for setting light color: - platform : spotify_cover_sensor cache_path : '/config/spotify-token-cache.json' Third party components \u00b6 Here are components written by other people that are not in HomeAssistant core. Alexa Media Player \u00b6 This component exposes all my alexa devices as media player. I can also use built in annoucment feature and send audio notifications. Google Geocode \u00b6 The google_geocode sensor converts device tracker location into a human-readable address. Mainly used for checking in what city currently each device is.","title":"Custom Components"},{"location":"HomeAssistant/Components/#my-components","text":"Here are components developed by me.","title":"My Components"},{"location":"HomeAssistant/Components/#it-will-rain","text":"This simple sensor just checks forecast for next few hours, and switches on if there is chance of rain. I use this with simple automation, to notify about next rain by switching blue light: - alias : Switch on blue light alert if it is going to rain trigger : platform : state entity_id : sensor.it_will_rain to : 'on' condition : condition : and conditions : - condition : state entity_id : group.family state : 'home' - condition : time after : '7:00:00' before : '23:59:59' action : - service : light.turn_on data : entity_id : light.gatewa_ambient_light rgb_color : [ 0 , 190 , 255 ] brightness : 45","title":"It will rain"},{"location":"HomeAssistant/Components/#samsung-multiroom","text":"This custom component is used for controlling volume, and source of my multiroom device like Samsung Soundbar K650 . It is based on unofficial api . This component is based on my older code from this repository media_player : - platform : samsung_multi_room name : \"Soundbar\" # name, otherwise it will use name of your soundbar host : 192.168.1.227 # ip of your soundbar max_volume : 20 # on this level glass breaks, and there are 80 levels more on K650...","title":"Samsung Multiroom"},{"location":"HomeAssistant/Components/#kkm","text":"This component fetch information about my train card from www.mpk.krakow.pl and creates sensor with information about how many days is left before expiration and on what tram lines it can be used for. - platform : kkm name : Tram card identity : 12345678 city_card : 12345678","title":"KKM"},{"location":"HomeAssistant/Components/#publictransit","text":"Public transit uses data collected by busix software that scraps Cracow public transit webpage and extracts departures of buses and trains. You can specify in component starting line stop and target line stop and system will refresh and calculate next departure. There is also custom lovelace component for displaying data. - platform : public_transit name : work from : \"Bia\u0142ucha\" to : \"Wzg\u00f3rza Krzes\u0142awickie\" endpoint : \"http://busix:5000/api\"","title":"PublicTransit"},{"location":"HomeAssistant/Components/#lunching","text":"Used for fetching information from lunching.pl about what did I order to eat in work. Sensor contains information when food will be delivered and what was ordered. - platform : lunching name : foooooooood username : macbury password : secret password here","title":"Lunching"},{"location":"HomeAssistant/Components/#cracow-air-quality","text":"Simple integration with Air Quality stations in Cracow for getting \"fresh\" information. Data is fetched from Cracow Air Quality Monitoring Page - platform : cracow_air_quality station_id : 7 name : 'nowa_huta'","title":"Cracow Air Quality"},{"location":"HomeAssistant/Components/#harvest","text":"Integration with harvest time tracking software. Mainly used for sending notification that work is done, and I should take my ass back to home. - platform : harvest name : work account_id : 1234 token : morphing-power-token","title":"Harvest"},{"location":"HomeAssistant/Components/#spotify-cover-sensor","text":"This platform extracts colors from currently played song cover. If proper scene is activated, these colors are used for setting light color: - platform : spotify_cover_sensor cache_path : '/config/spotify-token-cache.json'","title":"Spotify Cover Sensor"},{"location":"HomeAssistant/Components/#third-party-components","text":"Here are components written by other people that are not in HomeAssistant core.","title":"Third party components"},{"location":"HomeAssistant/Components/#alexa-media-player","text":"This component exposes all my alexa devices as media player. I can also use built in annoucment feature and send audio notifications.","title":"Alexa Media Player"},{"location":"HomeAssistant/Components/#google-geocode","text":"The google_geocode sensor converts device tracker location into a human-readable address. Mainly used for checking in what city currently each device is.","title":"Google Geocode"},{"location":"HomeAssistant/PresenceDetection/","text":"Presence detection is done by combination of two components: Asuswrt and Life360 . Asuswrt connects to my router and check if any of family members phone is connected to WiFi. Life360 uses GPS phone location and zones to detect where person currently is. I did not want to use group.all_devices for tracking all family member home status, so I added also a person component, configured each family member there and grouped them using group as group.family . In main lovelace view there is a picture-entity for each family member. Each state has own picture that is Nintendo Switch Mii .","title":"Presence Detection"},{"location":"HomeAssistant/Lovelace/","text":"Vacuum \u00b6 More info here Air Purifier \u00b6 air-purifier displays custom ui for the Xiaomi Air Purifier. There is a information about current AQI, speed and special buttons that allows me to switch between sleep mode, auto mode, and setting favorite level with target speed. - type : custom:air-purifier-card entity : fan.living_room_air_purifier Linak Desk Card \u00b6 Linak Desk Card is a much nicer fronted for cover entity. I can prepare some presets for diffrent heights that are available through select box in top right corner. - type : custom:linak-desk entity : cover.desk height : min : 68 max : 128 presets : - target : 100 label : 'Arek Praca' - target : 170 label : 'Arek Majsterkowanie' - target : 120 label : 'Ola Stanie' - target : 60 label : 'Ola Praca' QR Card \u00b6 QR Card is used for generating locally QR codes. For example I use it for generating code that helps people connect to my guest network. - type : custom:qr-card code : WIFI:S:MyAwesomeWiFi;T:WPA;P:TOTAL_SECRET_PASSWORD>;; Public Transport Card \u00b6 Transit Card shows public transit schedules as readable table. I have two cards of this type, on the main dashboard page that tells me when next train to my work will be and on work page. - type : custom:transit-card entity : sensor.to_work_transit KKM Card \u00b6 Simple companion card for kkm_sensor that displays how many days I have left on my train card before it expires and for what lines. dynamic-wallpaper \u00b6 This lovelace extension changes background depending on current state of sun.sun entity. - type : custom:dynamic-wallpaper entity : sun.sun","title":"Lovelace"},{"location":"HomeAssistant/Lovelace/#vacuum","text":"More info here","title":"Vacuum"},{"location":"HomeAssistant/Lovelace/#air-purifier","text":"air-purifier displays custom ui for the Xiaomi Air Purifier. There is a information about current AQI, speed and special buttons that allows me to switch between sleep mode, auto mode, and setting favorite level with target speed. - type : custom:air-purifier-card entity : fan.living_room_air_purifier","title":"Air Purifier"},{"location":"HomeAssistant/Lovelace/#linak-desk-card","text":"Linak Desk Card is a much nicer fronted for cover entity. I can prepare some presets for diffrent heights that are available through select box in top right corner. - type : custom:linak-desk entity : cover.desk height : min : 68 max : 128 presets : - target : 100 label : 'Arek Praca' - target : 170 label : 'Arek Majsterkowanie' - target : 120 label : 'Ola Stanie' - target : 60 label : 'Ola Praca'","title":"Linak Desk Card"},{"location":"HomeAssistant/Lovelace/#qr-card","text":"QR Card is used for generating locally QR codes. For example I use it for generating code that helps people connect to my guest network. - type : custom:qr-card code : WIFI:S:MyAwesomeWiFi;T:WPA;P:TOTAL_SECRET_PASSWORD>;;","title":"QR Card"},{"location":"HomeAssistant/Lovelace/#public-transport-card","text":"Transit Card shows public transit schedules as readable table. I have two cards of this type, on the main dashboard page that tells me when next train to my work will be and on work page. - type : custom:transit-card entity : sensor.to_work_transit","title":"Public Transport Card"},{"location":"HomeAssistant/Lovelace/#kkm-card","text":"Simple companion card for kkm_sensor that displays how many days I have left on my train card before it expires and for what lines.","title":"KKM Card"},{"location":"HomeAssistant/Lovelace/#dynamic-wallpaper","text":"This lovelace extension changes background depending on current state of sun.sun entity. - type : custom:dynamic-wallpaper entity : sun.sun","title":"dynamic-wallpaper"},{"location":"HomeAssistant/Screens/","text":"Dashboard \u00b6 Living Room \u00b6 Work Desk \u00b6 Bedroom \u00b6 Kitchen \u00b6 Bathroom \u00b6 Corridor \u00b6 Monitoring \u00b6 Work \u00b6 Network \u00b6","title":"Screens"},{"location":"HomeAssistant/Screens/#dashboard","text":"","title":"Dashboard"},{"location":"HomeAssistant/Screens/#living-room","text":"","title":"Living Room"},{"location":"HomeAssistant/Screens/#work-desk","text":"","title":"Work Desk"},{"location":"HomeAssistant/Screens/#bedroom","text":"","title":"Bedroom"},{"location":"HomeAssistant/Screens/#kitchen","text":"","title":"Kitchen"},{"location":"HomeAssistant/Screens/#bathroom","text":"","title":"Bathroom"},{"location":"HomeAssistant/Screens/#corridor","text":"","title":"Corridor"},{"location":"HomeAssistant/Screens/#monitoring","text":"","title":"Monitoring"},{"location":"HomeAssistant/Screens/#work","text":"","title":"Work"},{"location":"HomeAssistant/Screens/#network","text":"","title":"Network"},{"location":"HomeAssistant/Vacuum/","text":"All stuff related to my Xiaomi Vacuum Configuration \u00b6 Current firmware v11_001730.fullos.pkg Whole process of jailbreaking I really did not want to install ansible stuff on my vacuum, so here are few commands that were used to jailbreak and install simple scripts: sudo ./imagebuilder.sh --firmware v11_001730.fullos.pkg --public-key = id_rsa.pub --timezone = Europe/Warsaw mirobo --ip = 192 .168.8.1 --token = #token# raw-command miIO.ota '{\"mode\":\"normal\", \"install\":\"1\", \"app_url\":\"http://192.168.8.51:8000/v11_001730.fullos.pkg\", \"file_md5\":\"#md5#\",\"proc\":\"dnld install\"}' scp vacuum/upload_map.sh 192 .168.1.222:/root/upload_map.sh scp vacuum/watch_map.sh 192 .168.1.222:/root/watch_map.sh EDITOR = nano crontab -e @reboot sh /root/watch_map.sh >> /tmp/watch_map.log 2 > & 1 reboot Endpoint for live map \u00b6 There is also a simple node js server that handles request from watch_map.sh and renders nice map. The map is registered as generic camera . To prevent malicious posts there is also firewall level guard, that restricts access to this endpoint. Lovelace Card \u00b6 For the UI I have created custom lovelace card: vacuum-card . You can specify what vacuum should be controlled, from where to fetch map camera output. Additionaly there is option for adding buttons that can trigger services. This is used for triggering zone cleanups in diffrent rooms. - type : custom:vacuum-card entity : vacuum.main_vacuum map : camera.vacuum_map actions : - name : Clean living room service : script.clean_living_room icon : mdi:seat-recline-extra - name : Clean bedroom service : script.clean_bedroom icon : mdi:hotel - name : Clean kitchen service : script.clean_kitchen icon : mdi:fridge - name : Clean corridor service : script.clean_corridor icon : mdi:door-closed Zone Cleanup Panel \u00b6 With newest firmware update Xiaomi introduced Map Saving . This feature makes planned zone cleanup to actually work(before after few cleanings, robot did reset the map and need to scan the whole apartament again). To help me with preparing zone cleanup, I written a simple tool that takes generated map and allows me to select zones for cleaning: After selecting area text area is updated with YAML that can look like this: - service : vacuum.send_command data : entity_id : vacuum.main_vacum command : app_zoned_clean params : [[ 27542 , 20818 , 28986 , 22288 , 1 ]]","title":"Vacuum"},{"location":"HomeAssistant/Vacuum/#configuration","text":"Current firmware v11_001730.fullos.pkg Whole process of jailbreaking I really did not want to install ansible stuff on my vacuum, so here are few commands that were used to jailbreak and install simple scripts: sudo ./imagebuilder.sh --firmware v11_001730.fullos.pkg --public-key = id_rsa.pub --timezone = Europe/Warsaw mirobo --ip = 192 .168.8.1 --token = #token# raw-command miIO.ota '{\"mode\":\"normal\", \"install\":\"1\", \"app_url\":\"http://192.168.8.51:8000/v11_001730.fullos.pkg\", \"file_md5\":\"#md5#\",\"proc\":\"dnld install\"}' scp vacuum/upload_map.sh 192 .168.1.222:/root/upload_map.sh scp vacuum/watch_map.sh 192 .168.1.222:/root/watch_map.sh EDITOR = nano crontab -e @reboot sh /root/watch_map.sh >> /tmp/watch_map.log 2 > & 1 reboot","title":"Configuration"},{"location":"HomeAssistant/Vacuum/#endpoint-for-live-map","text":"There is also a simple node js server that handles request from watch_map.sh and renders nice map. The map is registered as generic camera . To prevent malicious posts there is also firewall level guard, that restricts access to this endpoint.","title":"Endpoint for live map"},{"location":"HomeAssistant/Vacuum/#lovelace-card","text":"For the UI I have created custom lovelace card: vacuum-card . You can specify what vacuum should be controlled, from where to fetch map camera output. Additionaly there is option for adding buttons that can trigger services. This is used for triggering zone cleanups in diffrent rooms. - type : custom:vacuum-card entity : vacuum.main_vacuum map : camera.vacuum_map actions : - name : Clean living room service : script.clean_living_room icon : mdi:seat-recline-extra - name : Clean bedroom service : script.clean_bedroom icon : mdi:hotel - name : Clean kitchen service : script.clean_kitchen icon : mdi:fridge - name : Clean corridor service : script.clean_corridor icon : mdi:door-closed","title":"Lovelace Card"},{"location":"HomeAssistant/Vacuum/#zone-cleanup-panel","text":"With newest firmware update Xiaomi introduced Map Saving . This feature makes planned zone cleanup to actually work(before after few cleanings, robot did reset the map and need to scan the whole apartament again). To help me with preparing zone cleanup, I written a simple tool that takes generated map and allows me to select zones for cleaning: After selecting area text area is updated with YAML that can look like this: - service : vacuum.send_command data : entity_id : vacuum.main_vacum command : app_zoned_clean params : [[ 27542 , 20818 , 28986 , 22288 , 1 ]]","title":"Zone Cleanup Panel"},{"location":"HomeAssistant/VoiceControl/","text":"Beginning with GoogleHome \u00b6 At the beginning I tried to use Google Home AIY Kit for voice controlling. Microphone was not bad, but it wasn't good(there was a lot situations that queries were not processed). First attempt was with snips.ai and modified code that could run it on Google AIY but quality of voice recognition was bad, and in situations with turned on TV or playing music it just didn't work. Next attempt used Google DialogFlow SDK for processing intents and Amazon Polly for audio responses(codename for project was Frankenstein Monster) but I was limited to only my implemented commands. Switching to Alexa \u00b6 My current setup uses 3 alexa devices placed in living room, kitchen and bedroom. My home assistant instance is glued with alexa using default alexa integration that points to private AWS lambda. To increase privacy and security not all entities are exposed to Alexa Cloud(only lights, few switches, media player and living room blinds). For sending notifications and to control echo dots there is alexa_media_player custom component. I use it for sending voice notifications and to periodically clear voice history.","title":"Voice Control"},{"location":"HomeAssistant/VoiceControl/#beginning-with-googlehome","text":"At the beginning I tried to use Google Home AIY Kit for voice controlling. Microphone was not bad, but it wasn't good(there was a lot situations that queries were not processed). First attempt was with snips.ai and modified code that could run it on Google AIY but quality of voice recognition was bad, and in situations with turned on TV or playing music it just didn't work. Next attempt used Google DialogFlow SDK for processing intents and Amazon Polly for audio responses(codename for project was Frankenstein Monster) but I was limited to only my implemented commands.","title":"Beginning with GoogleHome"},{"location":"HomeAssistant/VoiceControl/#switching-to-alexa","text":"My current setup uses 3 alexa devices placed in living room, kitchen and bedroom. My home assistant instance is glued with alexa using default alexa integration that points to private AWS lambda. To increase privacy and security not all entities are exposed to Alexa Cloud(only lights, few switches, media player and living room blinds). For sending notifications and to control echo dots there is alexa_media_player custom component. I use it for sending voice notifications and to periodically clear voice history.","title":"Switching to Alexa"},{"location":"Services/FirefoxSyncServer/","text":"identity.sync.tokenserver.uri: http://localhost:5000/token/1.0/sync/1.5","title":"FirefoxSyncServer"},{"location":"Services/UpTimeRobot/","text":"I really wanted to get notifications in case of downtime. Currently there is cool of service called UptimeRobot in which you can specify url to check. In case of downtime, UptimeRobot sents alerts. And there are also cool badges: The most important piece of software to check is of course HomeAssistant instance. The only thing exposed is ping.txt file inside home-assitant/www/ping.txt : location /ping.txt { proxy_set_header Host $host ; proxy_set_header X-Real-IP $remote_addr ; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for ; proxy_pass http://hass/local/ping.txt ; } If for some reason HomeAssistant container is down or the whole server just gone bananas, this file will not be served and response should 503 Bad Gateway .","title":"Uptime Robot"},{"location":"Software/Backup/","text":"Nothing fancy here. Everyday at 2:00 am cron job triggers backup using command smart-house backup . All processes are stopped and everything is compressed to one zip file that is later transferred to my QNAP NAS.","title":"Backup"},{"location":"Software/ControlScript/","text":"The whole infrastructure is controlled using my custom smart-house bash shell script . $ smart-house help \ud83c\udfe1 SmartHouse $ smart-house help - print this help message $ smart-house restart - restart all services $ smart-house docs - start preview mkdocs process $ smart-house quick-restart - restart only home-assistant $ smart-house cleanup - cleanup docker shit $ smart-house ps - show processes $ smart-house kiosk - start kiosk dev mode $ smart-house unban <ip> - unban ip $ smart-house psql - connect to docker postgresql instance $ smart-house migrate - migrate database $ smart-house health-check - ensure if home assistant is healthy $ smart-house mount-nas - mount nas shares $ smart-house start - start all services $ smart-house status - status of all services $ smart-house logs - print all logs $ smart-house stop - stop all services $ smart-house ddns - update dns on cloudflare $ smart-house backup - backup all data $ smart-house env - print all envs $ smart-house dev - dev mode $ smart-house lovelace - generate lovelace config $ smart-house lovelace-dev - regenerate lovelace on file change $ smart-house validate-config - check if config is ok $ smart-house build container - rebuild container $ smart-house upgrade - upgrade current home assistant $ smart-house docker-compose args - run docker compose commands $ smart-house add-mosquitto-user name - creates new user and generates for him random password $ smart-house disable-aotec-blinking - disable stupid blinking on aotec dongle","title":"Control Scripts"},{"location":"Software/Development/","text":"Most of services used by my Smart House resides inside docker containers. Thanks to that I can get about 90% similar setup on my dev machine. Configuring of the dev environment starts from copying all .env.example files and filling them with credentials and configurations: cp .env.crontab.example .env.crontab cp .env.grafana.example .env.grafana cp .env.influxdb.example .env.influxdb cp .env.pihole.example .env.pihole cp .env.postgresql.example .env.postgresql cp .env.nextcloud.example .env.nextcloud cp .env.plex.example .env.plex cp .env.home-assistant.example .env.home-assistant Next there are few files used by docker that needs to be created(docker would create a folder for that not a file) mkdir -p .docker/data/mosquitto mkdir -p .docker/log touch .docker/data/mosquitto/users.db touch .docker/log/fail2ban.log touch .docker/log/mosquitto.log And finally some python dependencies: sudo pip3 install -r requirements.txt Now we can Rock & Roll. There are two dev commands, the first one is dev that bootups all containers: SMART_HOUSE_DIR = $( pwd ) bin/smart-house dev And here is simple command that watches directory with lovelace configuration, and regenerates all configuration on change: SMART_HOUSE_DIR = $( pwd ) bin/smart-house lovelace-dev","title":"Development"},{"location":"Software/Encryption/","text":"Most of credentials is stored in plain .env files, and they are pretty sensitive(duh). Most configurations of HomeAssistant is based on installing everything yolo on RaspberryPi without and counting on that most bouglars will ignore this small box. My setup is stored on encrypted LUKS partition under /smart-house . After reboot, to decrypt partition I have small script named smart-house-unlock that asks for password, decrypts partition and starts all services.","title":"Encryption"},{"location":"Software/EspHome/","text":"Wemos D1 to ESPHome Pin Mapping \u00b6 static const uint8_t D0 = 16 ; static const uint8_t D1 = 5 ; static const uint8_t D2 = 4 ; static const uint8_t D3 = 0 ; static const uint8_t D4 = 2 ; static const uint8_t D5 = 14 ; static const uint8_t D6 = 12 ; static const uint8_t D7 = 13 ; static const uint8_t D8 = 15 ; static const uint8_t RX = 3 ; static const uint8_t TX = 1 ; https://github.com/esp8266/Arduino/blob/master/variants/d1_mini/pins_arduino.h#L37","title":"EspHome"},{"location":"Software/EspHome/#wemos-d1-to-esphome-pin-mapping","text":"static const uint8_t D0 = 16 ; static const uint8_t D1 = 5 ; static const uint8_t D2 = 4 ; static const uint8_t D3 = 0 ; static const uint8_t D4 = 2 ; static const uint8_t D5 = 14 ; static const uint8_t D6 = 12 ; static const uint8_t D7 = 13 ; static const uint8_t D8 = 15 ; static const uint8_t RX = 3 ; static const uint8_t TX = 1 ; https://github.com/esp8266/Arduino/blob/master/variants/d1_mini/pins_arduino.h#L37","title":"Wemos D1 to ESPHome Pin Mapping"},{"location":"Software/GettingStarted/","text":"Provisioning all instances \u00b6 Clone this repository on your local machine. Install ansible and run the provision command: # copy configuration for our inventory, Specify ip of all prepared servers cp provision/inventory.ini.example provision/inventory.ini # Just run the provision shit bin/smart-house-provision server Configuring main HomeAssistant instance \u00b6 Before starting smart house instance, there is a few things to do. Go to /smart-house directory and edit all .env files: ssh <ssh-user>@<target-ip> cd /smart-house # Edit configuration under .env files nano .env.crontab nano .env.grafana nano .env.influxdb nano .env.pihole nano .env.postgresql nano .env.nextcloud nano .env.plex nano .env.home-assistant # Generate mosquitto user and password smart-house add-mosquitto-user home-assistant # Add it to our .env.home-assitant nano .env.home-assistant # Configure your zones cp home-assistant/components/zones.yaml.example home-assistant/components/zones.yaml nano home-assistant/components/zones.yaml # Start home assistant instance smart-house start # set key overwritewebroot to match your domain: (https://docs.nextcloud.com/server/13/admin_manual/configuration_server/reverse_proxy_configuration.html#overwrite-parameters) nano /smart-house/.docker/data/nextcloud/config/config.php # Generate long living token using home assistant panel nano appdaemon/appdaemon.yaml # paste code here smart-house restart # Configure know devices nano home-assistant/known_devices.yaml smart-house restart","title":"Getting Started"},{"location":"Software/GettingStarted/#provisioning-all-instances","text":"Clone this repository on your local machine. Install ansible and run the provision command: # copy configuration for our inventory, Specify ip of all prepared servers cp provision/inventory.ini.example provision/inventory.ini # Just run the provision shit bin/smart-house-provision server","title":"Provisioning all instances"},{"location":"Software/GettingStarted/#configuring-main-homeassistant-instance","text":"Before starting smart house instance, there is a few things to do. Go to /smart-house directory and edit all .env files: ssh <ssh-user>@<target-ip> cd /smart-house # Edit configuration under .env files nano .env.crontab nano .env.grafana nano .env.influxdb nano .env.pihole nano .env.postgresql nano .env.nextcloud nano .env.plex nano .env.home-assistant # Generate mosquitto user and password smart-house add-mosquitto-user home-assistant # Add it to our .env.home-assitant nano .env.home-assistant # Configure your zones cp home-assistant/components/zones.yaml.example home-assistant/components/zones.yaml nano home-assistant/components/zones.yaml # Start home assistant instance smart-house start # set key overwritewebroot to match your domain: (https://docs.nextcloud.com/server/13/admin_manual/configuration_server/reverse_proxy_configuration.html#overwrite-parameters) nano /smart-house/.docker/data/nextcloud/config/config.php # Generate long living token using home assistant panel nano appdaemon/appdaemon.yaml # paste code here smart-house restart # Configure know devices nano home-assistant/known_devices.yaml smart-house restart","title":"Configuring main HomeAssistant instance"},{"location":"Software/Nginx/","text":"Nginx is very nice web server used to proxy all traffic from docker containers. SSL certificates are provided by Lets Encrypt .","title":"Nginx"},{"location":"Software/Overview/","text":"My OpenSource Projects \u00b6 DPodcast \u00b6 DPodcast converts youtube channels into mp3 and generates podcasts xml. I use this to have ability to listen to my favorite channels(that have mostly people talking to camera, why they don't share their content in podcast form ?!) on my phone in offline mode without paing for youtube red. All content is shared over IPFS mqtt2wol \u00b6 mqtt2wol gateway is used to send wol packets over mqtt. This is installed on separate Raspberry PI. HomeAssistant allows to send wol packages but that would require to add host flag but that blows my docker setup up. mqtt2rf \u00b6 mqtt2rf gateway is used to for relaying 433/315MHz LPD/SRD signals with generic low-cost GPIO RF modules on a Raspberry Pi. yt-music-download-helper \u00b6 yt-music-download-helper is simple web ui that allows me to download video from YouTube, extract music from it and place it inside my QNAP Nas. Busix \u00b6 Busix is self hosted web scrapper that extract information from Cracow public transit webpage (that for some reason, still in 2019 uses table in table layout for displayin data.) All scrapped data is exposed through graphql endpoint: { departures ( from : \"Bia\u0142ucha\" , to : \"Wzg\u00f3rza Krzes\u0142awickie\" , at : \"10 minutes from now\" ) { edges { node { line { name kind } time { formatted distance } } } } } Other OpenSource projects \u00b6 HomeAssistan \u00b6 Home Assistant my main home automation software. I decided to use it because all configuration can be done by simple YAML files that can be stored inside git repository and UI is pretty decent and touch friendly. Ansible \u00b6 Ansible is nice nifty tool that helps me provisioning all running computer in my house(vacuum, smart panel, raspberry pi etc.). All provisioning scripts resides here . Docker \u00b6 Docker is for managing all containers with software used in my SmartHome. Before I did use hassbian but that was a bit off hassle if on upgrade something did blow or HomeAssistant did break something, and rollback was required. Hass.io hides to much from me so I decided to prepare my own solution. Ubuntu 18.04 LTS \u00b6 Ubuntu it is pretty good linux with pretty good support. Appdaemon \u00b6 Appdaemon is pretty decent extension for HomeAssistant automations. At some level I needed to put more logic to automations and YAML files become unreadable for puny human. PiHole \u00b6 Everybody is tracking you, Google, Russia(damn you Putin), China(damn you commies) and others. PiHole is nice software that blocks Ads/Trackin site on the DNS level. Additionaly I have mapped on my router Google DNS like 8.8.8.8 to point to PiHole instance. PostgreSQL \u00b6 PostgreSQL is main database used by HomeAssistant, Nextcloud and Firefly iii. Alternative would be eating glass or MySQL. InfluxDB and Grafana \u00b6 Influxdb is backend database optimized for time series data, that is collected from HomeAssistant. Grafana is used as analitics dashboard for analyzing data in form of nice and sexy charts. UFW and Fail2ban \u00b6 UFW is a firewall for sane people. Used to restrict access to smart home server. There is also a Fail2ban . It looks on logs from nginx, HomeAssistant and other services, and if it detect some kind of funky activity, then blocks it using system firewall CloudFlare \u00b6 CloudFlare My smart home ip is hidden behind domain and cloudflare dns server. There is a cron job that checks my current phone ip and updates it on the cloudflare. Plex \u00b6 Pretty nice media server. Plex is running on HomeAssistant computer and consumes photos and videos QNAP NAS. It has native client for Android/LG Web OS/Playstation 4 etc. NextCloud \u00b6 NextCloud is mainly used for providing calendar with CalDav and nice ui. This calendar is used mainly for triggering automations on specific times(heating, cat feeding etc.) and I wanted to avoid Google Calendar. Slack \u00b6 Slack is used for sending notifications. I have my own home workspace that is shared with my wife. IPFS \u00b6 IPFS stands for Interplanetary File System. At its core it is a versioned file system which can store files and track versions over time, very much like Git. It also defines how files move across a network, making it a distributed file system, much like BitTorrent. In combining these two properties, IPFS enables a new permanent web and augments the way we use existing internet protocols like HTTP. IFTT \u00b6 IFTT is used for triggering stuff using webhooks that don't expose APIs Sonarr, Bazarr and Transmission \u00b6 Sonarr and Transmission is used for tracking TV shows and Music. If a new show appear it is automatically downloaded using transmission. After download is completed stuff is moved to my NAS and Plex reindex everything. Bazarr is then used for finding polish subtitles. ESPHome \u00b6 ESPHome is a system to control your ESP8266/ESP32 by simple yet powerful configuration files and control them remotely through Home Automation systems. Firefly III \u00b6 Firefly III is budget managment software.","title":"Overview"},{"location":"Software/Overview/#my-opensource-projects","text":"","title":"My OpenSource Projects"},{"location":"Software/Overview/#dpodcast","text":"DPodcast converts youtube channels into mp3 and generates podcasts xml. I use this to have ability to listen to my favorite channels(that have mostly people talking to camera, why they don't share their content in podcast form ?!) on my phone in offline mode without paing for youtube red. All content is shared over IPFS","title":"DPodcast"},{"location":"Software/Overview/#mqtt2wol","text":"mqtt2wol gateway is used to send wol packets over mqtt. This is installed on separate Raspberry PI. HomeAssistant allows to send wol packages but that would require to add host flag but that blows my docker setup up.","title":"mqtt2wol"},{"location":"Software/Overview/#mqtt2rf","text":"mqtt2rf gateway is used to for relaying 433/315MHz LPD/SRD signals with generic low-cost GPIO RF modules on a Raspberry Pi.","title":"mqtt2rf"},{"location":"Software/Overview/#yt-music-download-helper","text":"yt-music-download-helper is simple web ui that allows me to download video from YouTube, extract music from it and place it inside my QNAP Nas.","title":"yt-music-download-helper"},{"location":"Software/Overview/#busix","text":"Busix is self hosted web scrapper that extract information from Cracow public transit webpage (that for some reason, still in 2019 uses table in table layout for displayin data.) All scrapped data is exposed through graphql endpoint: { departures ( from : \"Bia\u0142ucha\" , to : \"Wzg\u00f3rza Krzes\u0142awickie\" , at : \"10 minutes from now\" ) { edges { node { line { name kind } time { formatted distance } } } } }","title":"Busix"},{"location":"Software/Overview/#other-opensource-projects","text":"","title":"Other OpenSource projects"},{"location":"Software/Overview/#homeassistan","text":"Home Assistant my main home automation software. I decided to use it because all configuration can be done by simple YAML files that can be stored inside git repository and UI is pretty decent and touch friendly.","title":"HomeAssistan"},{"location":"Software/Overview/#ansible","text":"Ansible is nice nifty tool that helps me provisioning all running computer in my house(vacuum, smart panel, raspberry pi etc.). All provisioning scripts resides here .","title":"Ansible"},{"location":"Software/Overview/#docker","text":"Docker is for managing all containers with software used in my SmartHome. Before I did use hassbian but that was a bit off hassle if on upgrade something did blow or HomeAssistant did break something, and rollback was required. Hass.io hides to much from me so I decided to prepare my own solution.","title":"Docker"},{"location":"Software/Overview/#ubuntu-1804-lts","text":"Ubuntu it is pretty good linux with pretty good support.","title":"Ubuntu 18.04 LTS"},{"location":"Software/Overview/#appdaemon","text":"Appdaemon is pretty decent extension for HomeAssistant automations. At some level I needed to put more logic to automations and YAML files become unreadable for puny human.","title":"Appdaemon"},{"location":"Software/Overview/#pihole","text":"Everybody is tracking you, Google, Russia(damn you Putin), China(damn you commies) and others. PiHole is nice software that blocks Ads/Trackin site on the DNS level. Additionaly I have mapped on my router Google DNS like 8.8.8.8 to point to PiHole instance.","title":"PiHole"},{"location":"Software/Overview/#postgresql","text":"PostgreSQL is main database used by HomeAssistant, Nextcloud and Firefly iii. Alternative would be eating glass or MySQL.","title":"PostgreSQL"},{"location":"Software/Overview/#influxdb-and-grafana","text":"Influxdb is backend database optimized for time series data, that is collected from HomeAssistant. Grafana is used as analitics dashboard for analyzing data in form of nice and sexy charts.","title":"InfluxDB and Grafana"},{"location":"Software/Overview/#ufw-and-fail2ban","text":"UFW is a firewall for sane people. Used to restrict access to smart home server. There is also a Fail2ban . It looks on logs from nginx, HomeAssistant and other services, and if it detect some kind of funky activity, then blocks it using system firewall","title":"UFW and Fail2ban"},{"location":"Software/Overview/#cloudflare","text":"CloudFlare My smart home ip is hidden behind domain and cloudflare dns server. There is a cron job that checks my current phone ip and updates it on the cloudflare.","title":"CloudFlare"},{"location":"Software/Overview/#plex","text":"Pretty nice media server. Plex is running on HomeAssistant computer and consumes photos and videos QNAP NAS. It has native client for Android/LG Web OS/Playstation 4 etc.","title":"Plex"},{"location":"Software/Overview/#nextcloud","text":"NextCloud is mainly used for providing calendar with CalDav and nice ui. This calendar is used mainly for triggering automations on specific times(heating, cat feeding etc.) and I wanted to avoid Google Calendar.","title":"NextCloud"},{"location":"Software/Overview/#slack","text":"Slack is used for sending notifications. I have my own home workspace that is shared with my wife.","title":"Slack"},{"location":"Software/Overview/#ipfs","text":"IPFS stands for Interplanetary File System. At its core it is a versioned file system which can store files and track versions over time, very much like Git. It also defines how files move across a network, making it a distributed file system, much like BitTorrent. In combining these two properties, IPFS enables a new permanent web and augments the way we use existing internet protocols like HTTP.","title":"IPFS"},{"location":"Software/Overview/#iftt","text":"IFTT is used for triggering stuff using webhooks that don't expose APIs","title":"IFTT"},{"location":"Software/Overview/#sonarr-bazarr-and-transmission","text":"Sonarr and Transmission is used for tracking TV shows and Music. If a new show appear it is automatically downloaded using transmission. After download is completed stuff is moved to my NAS and Plex reindex everything. Bazarr is then used for finding polish subtitles.","title":"Sonarr, Bazarr and Transmission"},{"location":"Software/Overview/#esphome","text":"ESPHome is a system to control your ESP8266/ESP32 by simple yet powerful configuration files and control them remotely through Home Automation systems.","title":"ESPHome"},{"location":"Software/Overview/#firefly-iii","text":"Firefly III is budget managment software.","title":"Firefly III"},{"location":"Software/Ports/","text":"Port mapping for services that are running in docker Service name Port Redis 6379 MQTT 4105 NextCloud 4111 Influxdb 8086 Postgresql 4101 Home-Assistant 4102 Grafana 4100 PiHole 4104 Glances 4108 Portainer 4112 Plex 32400 Lidarr 8990 Sonarr 8989 Transmission 8112,51413 Calendar 4111 Plex 32400, 3005, 5353, 1900, 8324, 32469, 32410, 32412, 32413, 32414 YTDL 9292 Jupyter Notebook 10000 Firefly iii 10001 vacuum endpoint 10005 busix 10008","title":"Ports"},{"location":"Software/Upgrading/","text":"Most of upgrades are done by downloading or building new docker container. Upgrading Home Assistant \u00b6 Edit version of docker image in first line of Dockerfile inside home-assistant directory. Then run command: smart-house upgrade smart-house restart If everything still works, commit changes and tag the release: git commit -a -m \"New upgrade\" git tag v0.93.2 git push origin master git push origin v0.93.2 Upgrading rest of stuff \u00b6 Edit docker-compose.yaml , increase version for image. Because we have our dns server inside Docker container the best thing to do is to run pull first, and then restart all containers: smart-house docker-compose pull name-of-upgraded-service smart-house restart","title":"Upgrading"},{"location":"Software/Upgrading/#upgrading-home-assistant","text":"Edit version of docker image in first line of Dockerfile inside home-assistant directory. Then run command: smart-house upgrade smart-house restart If everything still works, commit changes and tag the release: git commit -a -m \"New upgrade\" git tag v0.93.2 git push origin master git push origin v0.93.2","title":"Upgrading Home Assistant"},{"location":"Software/Upgrading/#upgrading-rest-of-stuff","text":"Edit docker-compose.yaml , increase version for image. Because we have our dns server inside Docker container the best thing to do is to run pull first, and then restart all containers: smart-house docker-compose pull name-of-upgraded-service smart-house restart","title":"Upgrading rest of stuff"}]}